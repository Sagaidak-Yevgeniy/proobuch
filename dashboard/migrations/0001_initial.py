# Generated by Django 5.2 on 2025-04-19 15:33

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layout', models.JSONField(default=dict, verbose_name='Макет')),
                ('theme', models.CharField(default='light', max_length=30, verbose_name='Тема')),
                ('animation_speed', models.CharField(default='normal', max_length=20, verbose_name='Скорость анимации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
            ],
            options={
                'verbose_name': 'Макет дашборда',
                'verbose_name_plural': 'Макеты дашборда',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('event_type', models.CharField(choices=[('webinar', 'Вебинар'), ('lecture', 'Лекция'), ('seminar', 'Семинар'), ('consultation', 'Консультация'), ('deadline', 'Дедлайн'), ('other', 'Другое')], default='other', max_length=20, verbose_name='Тип мероприятия')),
                ('start_time', models.DateTimeField(verbose_name='Время начала')),
                ('end_time', models.DateTimeField(verbose_name='Время окончания')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='Место проведения')),
                ('url', models.URLField(blank=True, verbose_name='Ссылка')),
                ('is_public', models.BooleanField(default=True, verbose_name='Публичное')),
                ('max_participants', models.PositiveIntegerField(default=0, verbose_name='Максимальное количество участников')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='EventParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('registered', 'Зарегистрирован'), ('confirmed', 'Подтвержден'), ('attended', 'Присутствовал'), ('absent', 'Отсутствовал'), ('canceled', 'Отменен')], default='registered', max_length=20, verbose_name='Статус')),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('attended_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата посещения')),
                ('feedback', models.TextField(blank=True, verbose_name='Отзыв')),
                ('rating', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Оценка')),
            ],
            options={
                'verbose_name': 'Участник мероприятия',
                'verbose_name_plural': 'Участники мероприятий',
                'ordering': ['registered_at'],
            },
        ),
        migrations.CreateModel(
            name='GoalStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('order', models.PositiveSmallIntegerField(default=1, verbose_name='Порядок')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Выполнен')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
            ],
            options={
                'verbose_name': 'Шаг к цели',
                'verbose_name_plural': 'Шаги к целям',
                'ordering': ['goal', 'order'],
            },
        ),
        migrations.CreateModel(
            name='StudentGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('goal_type', models.CharField(choices=[('course', 'Прохождение курса'), ('exam', 'Подготовка к экзамену'), ('skill', 'Изучение навыка'), ('project', 'Выполнение проекта'), ('custom', 'Другое')], default='custom', max_length=20, verbose_name='Тип цели')),
                ('priority', models.CharField(choices=[('high', 'Высокий'), ('medium', 'Средний'), ('low', 'Низкий')], default='medium', max_length=20, verbose_name='Приоритет')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Срок выполнения')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Выполнена')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('progress', models.PositiveSmallIntegerField(default=0, verbose_name='Прогресс')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлена')),
            ],
            options={
                'verbose_name': 'Цель студента',
                'verbose_name_plural': 'Цели студентов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('widget_type', models.CharField(choices=[('courses_progress', 'Прогресс по курсам'), ('achievements', 'Достижения'), ('recent_activity', 'Недавняя активность'), ('statistics', 'Статистика'), ('leaderboard', 'Таблица лидеров'), ('upcoming_lessons', 'Предстоящие уроки'), ('goals', 'Цели обучения'), ('study_time', 'Время обучения'), ('calendar', 'Календарь'), ('notes', 'Заметки')], max_length=50, verbose_name='Тип виджета')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('position_x', models.PositiveSmallIntegerField(default=0, verbose_name='Позиция X')),
                ('position_y', models.PositiveSmallIntegerField(default=0, verbose_name='Позиция Y')),
                ('size', models.CharField(choices=[('small', 'Маленький'), ('medium', 'Средний'), ('large', 'Большой')], default='medium', max_length=10, verbose_name='Размер')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('settings', models.JSONField(blank=True, null=True, verbose_name='Настройки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
            ],
            options={
                'verbose_name': 'Виджет',
                'verbose_name_plural': 'Виджеты',
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='WidgetDataCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(verbose_name='Данные')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
            ],
            options={
                'verbose_name': 'Кэш данных виджета',
                'verbose_name_plural': 'Кэши данных виджетов',
            },
        ),
    ]
